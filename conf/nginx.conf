#user  nobody;
worker_processes 1;

error_log logs/error.log notice;
pid logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    client_max_body_size 1m;
    client_body_buffer_size 1m;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log logs/access.log main;

    chunked_transfer_encoding off;

    sendfile off;
    keepalive_timeout 60;
    gzip on;
    server_tokens off;
    more_clear_headers "Server:";

    geo $whiteiplist {
        default 1;
        192.168.0.1 0;
    }
    map $whiteiplist $limit {
        1 $binary_remote_addr;
        0 "";
    }
    limit_conn_zone $limit zone=limit:10m;
    limit_conn limit 1000;
    limit_req_zone $limit zone=limit_req:10m rate=6000r/s;
    limit_req zone=limit_req burst=1 nodelay;
    limit_req_status 503;
    limit_req_log_level error;

    lua_shared_dict lsd_sensitivewords 2m;

    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path "$prefix/light/?.lua;";
    lua_code_cache on;

    # set search paths for Lua external libraries written in C (can also use ';;'):
    lua_package_cpath '/usr/local/lib/?.so;';

    resolver 8.8.8.8;

    server {
        listen 8081;
        server_name localhost;
        charset utf-8;

        #access_log  logs/host.accss.log  main;

        include light.conf;

        location / {
            root html;
            index index.html index.htm;
        }

        location ~* /md5 {
            default_type application/json;
            content_by_lua '

            local resty_md5 = require "resty.md5"
            local str = require "resty.string"

            local md5 = resty_md5:new()
            md5:update("helloworld")
            md5:update("abcdef")

            local digest = md5:final()

            ngx.say("md5.digest: ", str.to_hex(digest))
            ';
        }
    }

    # HTTPS server
    #
    server {
        listen       4443 ssl reuseport;
        listen       [::]:4443 ssl ipv6only=on;
        server_name  localhost;

        #access_log  logs/host.access.log  main;

        ssl_certificate      conf/light_cert.crt;
        ssl_certificate_key  conf/light_cert.key;

        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        include light.conf;

        location / {
            root html;
            index index.html index.htm;
        }
    }

}
